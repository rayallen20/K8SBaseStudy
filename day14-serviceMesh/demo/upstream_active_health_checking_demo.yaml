clusters:
  - name: ...
  # 集群相关配置
  ...
  load_assignment:
  endpoints:
  - lb_endpoints: 
    - endpoint:
        health_check_config:
          # 自定义健康状态检测时使用的端口
          port_value: ... 
          ...
          ... 
  # health_checks嵌套在集群配置中的顶级
  health_checks: 
    # 超时时长
  - timeout: ...
    # 时间间隔
    interval: ...
    # 初始检测时间点散开量 以毫秒为单位
    initial_jitter: ...
    # 间隔检测时间点散开量 以毫秒为单位
    interval_jitter: ...
    # 将主机标记为不健康状态的检测阈值 即至少多少次不健康的检测后才将其标记为不可用
    unhealthy_threshold: ...
    # 将主机标记为健康状态的检测阈值 但初始检测成功一次即视主机为健康
    healthy_threshold: ...
    # HTTP类型的检测(7层检测) 包括此种类型在内的以下四种检测类型必须设置一种
    http_health_check: {...}
    # TCP类型的检测(4层检测)
    tcp_health_check: {...}
    # GRPC专用的检测
    grpc_health_check: {...}
    # 自定义检测
    custom_health_check: {...}
    # 布尔型值 是否在多次检测之间重用连接 默认值为true
    reuse_connection: ...
    # 定义未曾调度任何流量至集群时其端点健康检测时间间隔 一旦其接收流量即转为正常的时间间隔
    no_traffic_interval: ...
    # 标记为"unhealthy"状态的端点的健康检测时间间隔 
    # 一旦重新标记为"healthy"即转为正常时间间隔
    unhealthy_interval: ...
    # 端点刚被标记为"unhealthy"状态时的健康检测时间间隔
    # 随后即转为同unhealthy_interval的定义
    unhealthy_edge_interval: ...
    # 端点刚被标记为"healthy"状态时的健康检测时间间隔
    # 随后即转为同interval的定义
    healthy_edge_interval: ...
    # tls相关的配置
    tls_options: {...}
    # Optional key/value pairs that will be used to match a transport socket from those specified in the cluster’s transport socket matches
    transport_socket_match_criteria: {...} 